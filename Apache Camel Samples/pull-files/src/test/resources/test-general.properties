#for non-prod envs only
camel.trace=true

max.redeliveries=2
redelivery.delay=5000

# Rest services configuration
rest.implementation.component=servlet
rest.service.port=8080
rest.service.context.path=wits/rest
rest.api.path=/api-docs
rest.api.version=1.0.0
rest.api.title=NZX WITS Rest API
rest.api.version=1.0.0

unsupported.media.type.http.response.code=415
unsupported.media.type.http.response.message="{ message: \"Unsuported media type\"}"
bad.request.http.response.code=400
bad.request.http.response.message="{ message: \"Bad request\"}"
internal.server.error.http.response.code=500
internal.server.error.http.response.body="{ message: \"Internal Server Error\"}"
http.response.content.type="application/json"

quartz.autostart=true
camel.autostart=true





##### route specific settings
base.file.location=/tmp
from.messageid.not.provided=from message is not provided
to.messageid.not.provided=to message id is not provided
from.dtm.not.provided=from dtm is not available
to.dtm.not.provided=to dtm is not available
from.dtm.invalid.format=from dtm is not valid
to.dtm.invalid.format=to dtm is not valid
commit.pull.not.valid=commit pull can be trye or false and is mandatory


wits.base.query=SELECT  M.*  



wits.query.table=FROM MESSAGE_STORE M

wits.participant.query.addon=WHERE M.CUSTOMER_CODE = :?participantId

wits.message.query.addon=AND \
                         M.CUST_MSG_SEQ_ID BETWEEN :?fromMessageId AND :?toMessageId

wits.datetime.query.addon=AND \
                          M.DATETIME_SENT BETWEEN :?fromDtmConverted AND :?toDtmConverted


wits.filename.query.addon=AND \
                          M.FILENAME = :?filename


wits.messageType.query.addon=AND \
                          M.MESSAGE_TYPE = :?messageType





wits.commitpull.true.query.addon=AND \
                          M.MESSAGE_ID  in  \
                          ( \
                            SELECT DISTINCT CPQ.MESSAGE_ID FROM CUSTOMER_PULL_REQUESTS CPQ WHERE CPQ.CUSTOMER_CODE = :?participantId \
                          )

wits.commitpull.false.query.addon=AND \
                          not exists \
                            ( \
                                SELECT 1 FROM CUSTOMER_PULL_REQUESTS CPQ WHERE CPQ.CUSTOMER_CODE = :?participantId \
                              AND  \
                                CPQ.MESSAGE_ID = M.MESSAGE_ID \
                            )


wits.base.query.sort=ORDER BY M.MESSAGE_ID DESC



wits.count.query=SELECT  count(*)