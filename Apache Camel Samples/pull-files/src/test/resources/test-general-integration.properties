#redeliveries#for non-prod envs only
camel.trace=true

max.redeliveries=2
redelivery.delay=5000

file.location=/tmp/

quartz.autostart=false
camel.autostart=true



rest.implementation.component=jetty

wits.database.trading.host=localhost
wits.database.trading.port=1521
wits.database.trading.db=XE
wits.database.trading.user=trading
wits.database.trading.password=trading


##### route specific settings

base.file.location=/tmp
from.messageid.not.provided=from message is not provided
to.messageid.not.provided=to message id is not provided
from.dtm.not.provided=from dtm is not available
to.dtm.not.provided=to dtm is not available
from.dtm.invalid.format=from dtm is not valid
to.dtm.invalid.format=to dtm is not valid
commit.pull.not.valid=commit pull can be trye or false and is mandatory


wits.base.query=SELECT  M.*  



wits.query.table=FROM MESSAGE_STORE M

wits.participant.query.addon=WHERE M.CUSTOMER_CODE = :?participantId

wits.message.query.addon=AND \
                         M.CUST_MSG_SEQ_ID  BETWEEN :?fromMessageId  AND  :?toMessageId

wits.datetime.query.addon=AND  M.DATETIME_SENT  BETWEEN TO_TIMESTAMP(:?fromDtmConverted, 'YYYY-MM-DD HH24:MI:SS.FF')  AND  TO_TIMESTAMP(:?toDtmConverted, 'YYYY-MM-DD HH24:MI:SS.FF')       


#wits.datetime.query.addon=AND  M.DATETIME_SENT  BETWEEN TO_TIMESTAMP_TZ(:?fromDtm, 'YYYY-MM-DD"T"HH24:MI:SSTZHTZM')  AND  TO_TIMESTAMP_TZ(:?toDtm, 'YYYY-MM-DD"T"HH24:MI:SSTZHTZM')

wits.filename.query.addon=AND \
                          M.FILENAME = :?filename


wits.messageType.query.addon=AND \
                          M.MESSAGE_TYPE = :?messageType





wits.commitpull.true.query.addon=AND \
                          M.MESSAGE_ID  in  \
                          ( \
                            SELECT DISTINCT CPQ.MESSAGE_ID FROM CUSTOMER_PULL_REQUESTS CPQ WHERE CPQ.CUSTOMER_CODE = :?participantId \
                          )

wits.commitpull.false.query.addon=AND \
                          not exists \
                            ( \
                                SELECT 1 FROM CUSTOMER_PULL_REQUESTS CPQ WHERE CPQ.CUSTOMER_CODE = :?participantId \
                              AND  \
                                CPQ.MESSAGE_ID = M.MESSAGE_ID \
                            )


wits.base.query.sort=ORDER BY M.MESSAGE_ID DESC 



wits.count.query=SELECT  count(*)